apply plugin: 'com.android.application'
apply plugin: 'com.google.cloud.tools.endpoints-framework-client'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.google.cloud.tools:endpoints-framework-gradle-plugin:$rootProject.ext.googleCloudEndpointsPluginVersion"
    }
}

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.jmlb0003.jokesappnd"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    endpointsServer project(path: ':backend', configuration: 'endpoints')
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"

    implementation "com.google.android.gms:play-services-ads:$rootProject.ext.playServicesAdsVersion"
    implementation "com.google.api-client:google-api-client:$rootProject.ext.googleApiClientVersion"
    implementation "com.google.http-client:google-http-client-android:$rootProject.ext.googleApiClientVersion"
    implementation "com.google.code.findbugs:jsr305:$rootProject.ext.googleFindBugsVersion"

    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.testRunnerVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}
